package eu.davidfranco.TwitterBot.events;

import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import eu.davidfranco.TwitterBot.Event;

public class EventManager {
	List<Object> listeners = new ArrayList<Object>();
	public EventManager(){
		
	}
	public void registerEvents(Object c){
		listeners.add(c);
	}
	public void callEvent(Event e){
		for(Object c : listeners){
			for(Method m : c.getClass().getMethods()){
				if(hasEventHandlerAnnotation(m)){
					System.out.println(m.getName());
					Class<?>[] tp = m.getParameterTypes();
					if(tp.length == 1 && tp[0] == e.getClass()){
						try {
							m.invoke(c, new Object[]{e});
						} catch (Exception ex) {
							ex.printStackTrace();
						}
					}
				}
			}
		}
	}
	private boolean hasEventHandlerAnnotation(Method m){
		Annotation[] annotations = m.getDeclaredAnnotations();
		System.out.println(annotations.length);
		for(Annotation annotation : annotations){
			System.out.println("Peneee");
			System.out.println(annotation.getClass().getName());
		    //if(annotation instanceof n){
		    	return false;
		    //}
		}
		return true;
	}
}
